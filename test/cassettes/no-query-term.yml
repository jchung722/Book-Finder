---
http_interactions:
- request:
    method: get
    uri: https://www.googleapis.com/books/v1/volumes?q=
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
  response:
    status:
      code: 400
      message: Bad Request
    headers:
      Vary:
      - Origin
      - X-Origin
      Content-Type:
      - application/json; charset=UTF-8
      Date:
      - Fri, 15 Feb 2019 04:41:52 GMT
      Expires:
      - Fri, 15 Feb 2019 04:41:52 GMT
      Cache-Control:
      - private, max-age=0
      X-Content-Type-Options:
      - nosniff
      X-Frame-Options:
      - SAMEORIGIN
      X-Xss-Protection:
      - 1; mode=block
      Server:
      - GSE
      Alt-Svc:
      - quic=":443"; ma=2592000; v="44,43,39"
      Transfer-Encoding:
      - chunked
    body:
      encoding: ASCII-8BIT
      string: |
        {
         "error": {
          "errors": [
           {
            "domain": "global",
            "reason": "queryRequired",
            "message": "Missing query.",
            "locationType": "parameter",
            "location": "q"
           }
          ],
          "code": 400,
          "message": "Missing query."
         }
        }
    http_version: 
  recorded_at: Fri, 15 Feb 2019 04:41:52 GMT
- request:
    method: get
    uri: 'https://www.googleapis.com/books/v1/volumes?q=inauthor:'
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Expires:
      - Fri, 15 Feb 2019 04:41:52 GMT
      Date:
      - Fri, 15 Feb 2019 04:41:52 GMT
      Cache-Control:
      - private, max-age=0, must-revalidate, no-transform
      Etag:
      - '"IUREzboS_XZycecz4xfru1ipYfo/fD6zJ_sJ-enIS_ZdLFwEO6tBLCQ"'
      Vary:
      - Origin
      - X-Origin
      Content-Type:
      - application/json; charset=UTF-8
      X-Content-Type-Options:
      - nosniff
      X-Frame-Options:
      - SAMEORIGIN
      X-Xss-Protection:
      - 1; mode=block
      Server:
      - GSE
      Alt-Svc:
      - quic=":443"; ma=2592000; v="44,43,39"
      Transfer-Encoding:
      - chunked
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        ewogImtpbmQiOiAiYm9va3Mjdm9sdW1lcyIsCiAidG90YWxJdGVtcyI6IDIzNzcsCiAiaXRlbXMiOiBbCiAgewogICAia2luZCI6ICJib29rcyN2b2x1bWUiLAogICAiaWQiOiAicUJ4aGhNa1NMUk1DIiwKICAgImV0YWciOiAidSt3QlZRQkh0blEiLAogICAic2VsZkxpbmsiOiAiaHR0cHM6Ly93d3cuZ29vZ2xlYXBpcy5jb20vYm9va3MvdjEvdm9sdW1lcy9xQnhoaE1rU0xSTUMiLAogICAidm9sdW1lSW5mbyI6IHsKICAgICJ0aXRsZSI6ICJUcmlwcGluZ3MgaW4gQXV0aG9yLWxhbmQiLAogICAgImF1dGhvcnMiOiBbCiAgICAgIkVtaWx5IENodWJidWNrIEp1ZHNvbiIKICAgIF0sCiAgICAicHVibGlzaGVkRGF0ZSI6ICIxODQ2IiwKICAgICJpbmR1c3RyeUlkZW50aWZpZXJzIjogWwogICAgIHsKICAgICAgInR5cGUiOiAiT1RIRVIiLAogICAgICAiaWRlbnRpZmllciI6ICJIQVJWQVJEOjMyMDQ0MDE5Mzc3ODM3IgogICAgIH0KICAgIF0sCiAgICAicmVhZGluZ01vZGVzIjogewogICAgICJ0ZXh0IjogZmFsc2UsCiAgICAgImltYWdlIjogdHJ1ZQogICAgfSwKICAgICJwYWdlQ291bnQiOiAyODEsCiAgICAicHJpbnRUeXBlIjogIkJPT0siLAogICAgIm1hdHVyaXR5UmF0aW5nIjogIk5PVF9NQVRVUkUiLAogICAgImFsbG93QW5vbkxvZ2dpbmciOiBmYWxzZSwKICAgICJjb250ZW50VmVyc2lvbiI6ICIwLjIuMS4wLmZ1bGwuMSIsCiAgICAicGFuZWxpemF0aW9uU3VtbWFyeSI6IHsKICAgICAiY29udGFpbnNFcHViQnViYmxlcyI6IGZhbHNlLAogICAgICJjb250YWluc0ltYWdlQnViYmxlcyI6IGZhbHNlCiAgICB9LAogICAgImltYWdlTGlua3MiOiB7CiAgICAgInNtYWxsVGh1bWJuYWlsIjogImh0dHA6Ly9ib29rcy5nb29nbGUuY29tL2Jvb2tzL2NvbnRlbnQ/aWQ9cUJ4aGhNa1NMUk1DJnByaW50c2VjPWZyb250Y292ZXImaW1nPTEmem9vbT01JmVkZ2U9Y3VybCZzb3VyY2U9Z2JzX2FwaSIsCiAgICAgInRodW1ibmFpbCI6ICJodHRwOi8vYm9va3MuZ29vZ2xlLmNvbS9ib29rcy9jb250ZW50P2lkPXFCeGhoTWtTTFJNQyZwcmludHNlYz1mcm9udGNvdmVyJmltZz0xJnpvb209MSZlZGdlPWN1cmwmc291cmNlPWdic19hcGkiCiAgICB9LAogICAgImxhbmd1YWdlIjogImVuIiwKICAgICJwcmV2aWV3TGluayI6ICJodHRwOi8vYm9va3MuZ29vZ2xlLmNvbS9ib29rcz9pZD1xQnhoaE1rU0xSTUMmcGc9UEExNzMmZHE9aW5hdXRob3I6JmhsPSZjZD0xJnNvdXJjZT1nYnNfYXBpIiwKICAgICJpbmZvTGluayI6ICJodHRwczovL3BsYXkuZ29vZ2xlLmNvbS9zdG9yZS9ib29rcy9kZXRhaWxzP2lkPXFCeGhoTWtTTFJNQyZzb3VyY2U9Z2JzX2FwaSIsCiAgICAiY2Fub25pY2FsVm9sdW1lTGluayI6ICJodHRwczovL21hcmtldC5hbmRyb2lkLmNvbS9kZXRhaWxzP2lkPWJvb2stcUJ4aGhNa1NMUk1DIgogICB9LAogICAic2FsZUluZm8iOiB7CiAgICAiY291bnRyeSI6ICJVUyIsCiAgICAic2FsZWFiaWxpdHkiOiAiRlJFRSIsCiAgICAiaXNFYm9vayI6IHRydWUsCiAgICAiYnV5TGluayI6ICJodHRwczovL3BsYXkuZ29vZ2xlLmNvbS9zdG9yZS9ib29rcy9kZXRhaWxzP2lkPXFCeGhoTWtTTFJNQyZyZGlkPWJvb2stcUJ4aGhNa1NMUk1DJnJkb3Q9MSZzb3VyY2U9Z2JzX2FwaSIKICAgfSwKICAgImFjY2Vzc0luZm8iOiB7CiAgICAiY291bnRyeSI6ICJVUyIsCiAgICAidmlld2FiaWxpdHkiOiAiQUxMX1BBR0VTIiwKICAgICJlbWJlZGRhYmxlIjogdHJ1ZSwKICAgICJwdWJsaWNEb21haW4iOiB0cnVlLAogICAgInRleHRUb1NwZWVjaFBlcm1pc3Npb24iOiAiQUxMT1dFRCIsCiAgICAiZXB1YiI6IHsKICAgICAiaXNBdmFpbGFibGUiOiBmYWxzZSwKICAgICAiZG93bmxvYWRMaW5rIjogImh0dHA6Ly9ib29rcy5nb29nbGUuY29tL2Jvb2tzL2Rvd25sb2FkL1RyaXBwaW5nc19pbl9BdXRob3JfbGFuZC5lcHViP2lkPXFCeGhoTWtTTFJNQyZobD0mb3V0cHV0PWVwdWImc291cmNlPWdic19hcGkiCiAgICB9LAogICAgInBkZiI6IHsKICAgICAiaXNBdmFpbGFibGUiOiB0cnVlLAogICAgICJkb3dubG9hZExpbmsiOiAiaHR0cDovL2Jvb2tzLmdvb2dsZS5jb20vYm9va3MvZG93bmxvYWQvVHJpcHBpbmdzX2luX0F1dGhvcl9sYW5kLnBkZj9pZD1xQnhoaE1rU0xSTUMmaGw9Jm91dHB1dD1wZGYmc2lnPUFDZlUzVTJlY09ZMnFOX25fWWI0WGdLLXhXQ0JpZGoxOGcmc291cmNlPWdic19hcGkiCiAgICB9LAogICAgIndlYlJlYWRlckxpbmsiOiAiaHR0cDovL3BsYXkuZ29vZ2xlLmNvbS9ib29rcy9yZWFkZXI/aWQ9cUJ4aGhNa1NMUk1DJmhsPSZwcmludHNlYz1mcm9udGNvdmVyJnNvdXJjZT1nYnNfYXBpIiwKICAgICJhY2Nlc3NWaWV3U3RhdHVzIjogIkZVTExfUFVCTElDX0RPTUFJTiIsCiAgICAicXVvdGVTaGFyaW5nQWxsb3dlZCI6IGZhbHNlCiAgIH0KICB9LAogIHsKICAgImtpbmQiOiAiYm9va3Mjdm9sdW1lIiwKICAgImlkIjogIl80WVNBQUFBWUFBSiIsCiAgICJldGFnIjogIm5CNWY1WmlFNHlrIiwKICAgInNlbGZMaW5rIjogImh0dHBzOi8vd3d3Lmdvb2dsZWFwaXMuY29tL2Jvb2tzL3YxL3ZvbHVtZXMvXzRZU0FBQUFZQUFKIiwKICAgInZvbHVtZUluZm8iOiB7CiAgICAidGl0bGUiOiAiV2VzbGV5YW4gTG9jYWwgUHJlYWNoZXJzIiwKICAgICJzdWJ0aXRsZSI6ICJCaW9ncmFwaGljYWwgSWxsdXN0cmF0aW9ucyBvZiBUaGVpciBQb3NpdGlvbiBpbiB0aGUgQ29ubmV4aW9uLCBVdGlsaXR5IGluIHRoZSBDaHVyY2gsIGFuZCBJbmZsdWVuY2UgaW4gdGhlIFdvcmxkIiwKICAgICJhdXRob3JzIjogWwogICAgICJBdXRob3Igb2YgVHluZXNpZGUgY2VsZWJyaXRpZXMiCiAgICBdLAogICAgInB1Ymxpc2hlZERhdGUiOiAiMTg3NCIsCiAgICAiaW5kdXN0cnlJZGVudGlmaWVycyI6IFsKICAgICB7CiAgICAgICJ0eXBlIjogIk9USEVSIiwKICAgICAgImlkZW50aWZpZXIiOiAiSEFSVkFSRDpBSDVXOUEiCiAgICAgfQogICAgXSwKICAgICJyZWFkaW5nTW9kZXMiOiB7CiAgICAgInRleHQiOiBmYWxzZSwKICAgICAiaW1hZ2UiOiB0cnVlCiAgICB9LAogICAgInBhZ2VDb3VudCI6IDMzNCwKICAgICJwcmludFR5cGUiOiAiQk9PSyIsCiAgICAibWF0dXJpdHlSYXRpbmciOiAiTk9UX01BVFVSRSIsCiAgICAiYWxsb3dBbm9uTG9nZ2luZyI6IGZhbHNlLAogICAgImNvbnRlbnRWZXJzaW9uIjogImZ1bGwtMS4wLjAiLAogICAgImltYWdlTGlua3MiOiB7CiAgICAgInNtYWxsVGh1bWJuYWlsIjogImh0dHA6Ly9ib29rcy5nb29nbGUuY29tL2Jvb2tzL2NvbnRlbnQ/aWQ9XzRZU0FBQUFZQUFKJnByaW50c2VjPWZyb250Y292ZXImaW1nPTEmem9vbT01JmVkZ2U9Y3VybCZzb3VyY2U9Z2JzX2FwaSIsCiAgICAgInRodW1ibmFpbCI6ICJodHRwOi8vYm9va3MuZ29vZ2xlLmNvbS9ib29rcy9jb250ZW50P2lkPV80WVNBQUFBWUFBSiZwcmludHNlYz1mcm9udGNvdmVyJmltZz0xJnpvb209MSZlZGdlPWN1cmwmc291cmNlPWdic19hcGkiCiAgICB9LAogICAgImxhbmd1YWdlIjogImVuIiwKICAgICJwcmV2aWV3TGluayI6ICJodHRwOi8vYm9va3MuZ29vZ2xlLmNvbS9ib29rcz9pZD1fNFlTQUFBQVlBQUomcGc9UFAxJmRxPWluYXV0aG9yOiZobD0mY2Q9MiZzb3VyY2U9Z2JzX2FwaSIsCiAgICAiaW5mb0xpbmsiOiAiaHR0cHM6Ly9wbGF5Lmdvb2dsZS5jb20vc3RvcmUvYm9va3MvZGV0YWlscz9pZD1fNFlTQUFBQVlBQUomc291cmNlPWdic19hcGkiLAogICAgImNhbm9uaWNhbFZvbHVtZUxpbmsiOiAiaHR0cHM6Ly9tYXJrZXQuYW5kcm9pZC5jb20vZGV0YWlscz9pZD1ib29rLV80WVNBQUFBWUFBSiIKICAgfSwKICAgInNhbGVJbmZvIjogewogICAgImNvdW50cnkiOiAiVVMiLAogICAgInNhbGVhYmlsaXR5IjogIkZSRUUiLAogICAgImlzRWJvb2siOiB0cnVlLAogICAgImJ1eUxpbmsiOiAiaHR0cHM6Ly9wbGF5Lmdvb2dsZS5jb20vc3RvcmUvYm9va3MvZGV0YWlscz9pZD1fNFlTQUFBQVlBQUomcmRpZD1ib29rLV80WVNBQUFBWUFBSiZyZG90PTEmc291cmNlPWdic19hcGkiCiAgIH0sCiAgICJhY2Nlc3NJbmZvIjogewogICAgImNvdW50cnkiOiAiVVMiLAogICAgInZpZXdhYmlsaXR5IjogIkFMTF9QQUdFUyIsCiAgICAiZW1iZWRkYWJsZSI6IHRydWUsCiAgICAicHVibGljRG9tYWluIjogdHJ1ZSwKICAgICJ0ZXh0VG9TcGVlY2hQZXJtaXNzaW9uIjogIkFMTE9XRUQiLAogICAgImVwdWIiOiB7CiAgICAgImlzQXZhaWxhYmxlIjogZmFsc2UsCiAgICAgImRvd25sb2FkTGluayI6ICJodHRwOi8vYm9va3MuZ29vZ2xlLmNvbS9ib29rcy9kb3dubG9hZC9XZXNsZXlhbl9Mb2NhbF9QcmVhY2hlcnMuZXB1Yj9pZD1fNFlTQUFBQVlBQUomaGw9Jm91dHB1dD1lcHViJnNvdXJjZT1nYnNfYXBpIgogICAgfSwKICAgICJwZGYiOiB7CiAgICAgImlzQXZhaWxhYmxlIjogdHJ1ZSwKICAgICAiZG93bmxvYWRMaW5rIjogImh0dHA6Ly9ib29rcy5nb29nbGUuY29tL2Jvb2tzL2Rvd25sb2FkL1dlc2xleWFuX0xvY2FsX1ByZWFjaGVycy5wZGY/aWQ9XzRZU0FBQUFZQUFKJmhsPSZvdXRwdXQ9cGRmJnNpZz1BQ2ZVM1UzVmdIMXVoTDZEa3NvV1ZQT3ppWVh2SGtrLWdBJnNvdXJjZT1nYnNfYXBpIgogICAgfSwKICAgICJ3ZWJSZWFkZXJMaW5rIjogImh0dHA6Ly9wbGF5Lmdvb2dsZS5jb20vYm9va3MvcmVhZGVyP2lkPV80WVNBQUFBWUFBSiZobD0mcHJpbnRzZWM9ZnJvbnRjb3ZlciZzb3VyY2U9Z2JzX2FwaSIsCiAgICAiYWNjZXNzVmlld1N0YXR1cyI6ICJGVUxMX1BVQkxJQ19ET01BSU4iLAogICAgInF1b3RlU2hhcmluZ0FsbG93ZWQiOiBmYWxzZQogICB9CiAgfSwKICB7CiAgICJraW5kIjogImJvb2tzI3ZvbHVtZSIsCiAgICJpZCI6ICJteDQ2dEFFQUNBQUoiLAogICAiZXRhZyI6ICJRNmJqNko1dURrSSIsCiAgICJzZWxmTGluayI6ICJodHRwczovL3d3dy5nb29nbGVhcGlzLmNvbS9ib29rcy92MS92b2x1bWVzL214NDZ0QUVBQ0FBSiIsCiAgICJ2b2x1bWVJbmZvIjogewogICAgInRpdGxlIjogIlRyaXBwaW5ncyBpbiBBdXRob3ItTGFuZCAoQ2xhc3NpYyBSZXByaW50KSIsCiAgICAiYXV0aG9ycyI6IFsKICAgICAiRmFubnkgRm9yZXN0ZXIiCiAgICBdLAogICAgInB1Ymxpc2hlciI6ICJGb3Jnb3R0ZW4gQm9va3MiLAogICAgInB1Ymxpc2hlZERhdGUiOiAiMjAxNy0wNi0yOSIsCiAgICAiZGVzY3JpcHRpb24iOiAiRXhjZXJwdCBmcm9tIFRyaXBwaW5ncyBpbiBBdXRob3ItTGFuZCBJTiBwcmVzZW50aW5nIHRoZSBsYWJvdXJzIG9mIHRoZSBwYXN0IHllYXIsIHRvIGEgcHVibGljIHdoaWNoIEksIG9mIGFsbCBvdGhlcnMsIGhhdmUgYSByaWdodCB0byB0ZXJtIGdlbmVyb3VzLCBJIGhhdmUgb25seSB0byBhc2sgdGhlIHNhbWUga2luZCBjb25zaWRlcmF0aW9uIGZvciB0aGVtIGNvbGxlY3RpdmVseSBhbmQgYWxvbmUsIHRoYXQgdGhleSBtYXksIGhlcmV0b2ZvcmUsIGhhdmUgb3dlZCBpbiBwYXJ0IHRvIHRoZWlyIHN1cnJvdW5kaW5ncy4gQSBwcmVmYWNlIGlzIHVzdWFsbHkgYW4gaW50cm9kdWN0aW9uLCBvciBhbiBhcG9sb2d5IGZvciBpbnRydXNpb247IGFuZCBJIHNjYXJjZSBmZWVsIGl0IG5lY2Vzc2FyeSwgc2luY2UgSSBhbSBvbmx5IHNlbmRpbmcgbXkgYnJhaW4gY2hpbGRyZW4gb3V0IGFtb25nIG15IGZyaWVuZHMsIGNvbmZpZGVudCB0aGF0IHRob3VnaCB0aGVpciBmYXVsdHMgbWF5IG5vdCBwYXNzIHVubm90aWNlZCwgdGhleSB3aWxsIGJlIHRyZWF0ZWQgd2l0aCB0aGUgdGVuZGVybmVzcyB1c3VhbGx5IHNob3duIHRvIHRoZSB1bmludGVudGlvbmFsIG9mZmVuZGVyLiBJdCBtYXkgbm90IGJlIGFtaXNzLCBob3dldmVyLCB0byBnaXZlIHNvbWUgZXhwbGFuYXRpb24gY29uIGNlcm5pbmcgdGhlbS4gQWJvdXQgdGhlIFB1Ymxpc2hlciBGb3Jnb3R0ZW4gQm9va3MgcHVibGlzaGVzIGh1bmRyZWRzIG9mIHRob3VzYW5kcyBvZiByYXJlIGFuZCBjbGFzc2ljIGJvb2tzLiBGaW5kIG1vcmUgYXQgd3d3LmZvcmdvdHRlbmJvb2tzLmNvbSBUaGlzIGJvb2sgaXMgYSByZXByb2R1Y3Rpb24gb2YgYW4gaW1wb3J0YW50IGhpc3RvcmljYWwgd29yay4gRm9yZ290dGVuIEJvb2tzIHVzZXMgc3RhdGUtb2YtdGhlLWFydCB0ZWNobm9sb2d5IHRvIGRpZ2l0YWxseSByZWNvbnN0cnVjdCB0aGUgd29yaywgcHJlc2VydmluZyB0aGUgb3JpZ2luYWwgZm9ybWF0IHdoaWxzdCByZXBhaXJpbmcgaW1wZXJmZWN0aW9ucyBwcmVzZW50IGluIHRoZSBhZ2VkIGNvcHkuIEluIHJhcmUgY2FzZXMsIGFuIGltcGVyZmVjdGlvbiBpbiB0aGUgb3JpZ2luYWwsIHN1Y2ggYXMgYSBibGVtaXNoIG9yIG1pc3NpbmcgcGFnZSwgbWF5IGJlIHJlcGxpY2F0ZWQgaW4gb3VyIGVkaXRpb24uIFdlIGRvLCBob3dldmVyLCByZXBhaXIgdGhlIHZhc3QgbWFqb3JpdHkgb2YgaW1wZXJmZWN0aW9ucyBzdWNjZXNzZnVsbHk7IGFueSBpbXBlcmZlY3Rpb25zIHRoYXQgcmVtYWluIGFyZSBpbnRlbnRpb25hbGx5IGxlZnQgdG8gcHJlc2VydmUgdGhlIHN0YXRlIG9mIHN1Y2ggaGlzdG9yaWNhbCB3b3Jrcy4iLAogICAgImluZHVzdHJ5SWRlbnRpZmllcnMiOiBbCiAgICAgewogICAgICAidHlwZSI6ICJJU0JOXzEwIiwKICAgICAgImlkZW50aWZpZXIiOiAiMDI1OTE5MTI5OSIKICAgICB9LAogICAgIHsKICAgICAgInR5cGUiOiAiSVNCTl8xMyIsCiAgICAgICJpZGVudGlmaWVyIjogIjk3ODAyNTkxOTEyOTIiCiAgICAgfQogICAgXSwKICAgICJyZWFkaW5nTW9kZXMiOiB7CiAgICAgInRleHQiOiBmYWxzZSwKICAgICAiaW1hZ2UiOiBmYWxzZQogICAgfSwKICAgICJwYWdlQ291bnQiOiAyODAsCiAgICAicHJpbnRUeXBlIjogIkJPT0siLAogICAgIm1hdHVyaXR5UmF0aW5nIjogIk5PVF9NQVRVUkUiLAogICAgImFsbG93QW5vbkxvZ2dpbmciOiBmYWxzZSwKICAgICJjb250ZW50VmVyc2lvbiI6ICJwcmV2aWV3LTEuMC4wIiwKICAgICJwYW5lbGl6YXRpb25TdW1tYXJ5IjogewogICAgICJjb250YWluc0VwdWJCdWJibGVzIjogZmFsc2UsCiAgICAgImNvbnRhaW5zSW1hZ2VCdWJibGVzIjogZmFsc2UKICAgIH0sCiAgICAiaW1hZ2VMaW5rcyI6IHsKICAgICAic21hbGxUaHVtYm5haWwiOiAiaHR0cDovL2Jvb2tzLmdvb2dsZS5jb20vYm9va3MvY29udGVudD9pZD1teDQ2dEFFQUNBQUomcHJpbnRzZWM9ZnJvbnRjb3ZlciZpbWc9MSZ6b29tPTUmc291cmNlPWdic19hcGkiLAogICAgICJ0aHVtYm5haWwiOiAiaHR0cDovL2Jvb2tzLmdvb2dsZS5jb20vYm9va3MvY29udGVudD9pZD1teDQ2dEFFQUNBQUomcHJpbnRzZWM9ZnJvbnRjb3ZlciZpbWc9MSZ6b29tPTEmc291cmNlPWdic19hcGkiCiAgICB9LAogICAgImxhbmd1YWdlIjogImVuIiwKICAgICJwcmV2aWV3TGluayI6ICJodHRwOi8vYm9va3MuZ29vZ2xlLmNvbS9ib29rcz9pZD1teDQ2dEFFQUNBQUomZHE9aW5hdXRob3I6JmhsPSZjZD0zJnNvdXJjZT1nYnNfYXBpIiwKICAgICJpbmZvTGluayI6ICJodHRwOi8vYm9va3MuZ29vZ2xlLmNvbS9ib29rcz9pZD1teDQ2dEFFQUNBQUomZHE9aW5hdXRob3I6JmhsPSZzb3VyY2U9Z2JzX2FwaSIsCiAgICAiY2Fub25pY2FsVm9sdW1lTGluayI6ICJodHRwczovL2Jvb2tzLmdvb2dsZS5jb20vYm9va3MvYWJvdXQvVHJpcHBpbmdzX2luX0F1dGhvcl9MYW5kX0NsYXNzaWNfUmVwcmludC5odG1sP2hsPSZpZD1teDQ2dEFFQUNBQUoiCiAgIH0sCiAgICJzYWxlSW5mbyI6IHsKICAgICJjb3VudHJ5IjogIlVTIiwKICAgICJzYWxlYWJpbGl0eSI6ICJOT1RfRk9SX1NBTEUiLAogICAgImlzRWJvb2siOiBmYWxzZQogICB9LAogICAiYWNjZXNzSW5mbyI6IHsKICAgICJjb3VudHJ5IjogIlVTIiwKICAgICJ2aWV3YWJpbGl0eSI6ICJOT19QQUdFUyIsCiAgICAiZW1iZWRkYWJsZSI6IGZhbHNlLAogICAgInB1YmxpY0RvbWFpbiI6IGZhbHNlLAogICAgInRleHRUb1NwZWVjaFBlcm1pc3Npb24iOiAiQUxMT1dFRCIsCiAgICAiZXB1YiI6IHsKICAgICAiaXNBdmFpbGFibGUiOiBmYWxzZQogICAgfSwKICAgICJwZGYiOiB7CiAgICAgImlzQXZhaWxhYmxlIjogZmFsc2UKICAgIH0sCiAgICAid2ViUmVhZGVyTGluayI6ICJodHRwOi8vcGxheS5nb29nbGUuY29tL2Jvb2tzL3JlYWRlcj9pZD1teDQ2dEFFQUNBQUomaGw9JnByaW50c2VjPWZyb250Y292ZXImc291cmNlPWdic19hcGkiLAogICAgImFjY2Vzc1ZpZXdTdGF0dXMiOiAiTk9ORSIsCiAgICAicXVvdGVTaGFyaW5nQWxsb3dlZCI6IGZhbHNlCiAgIH0sCiAgICJzZWFyY2hJbmZvIjogewogICAgInRleHRTbmlwcGV0IjogIkFib3V0IHRoZSBQdWJsaXNoZXIgRm9yZ290dGVuIEJvb2tzIHB1Ymxpc2hlcyBodW5kcmVkcyBvZiB0aG91c2FuZHMgb2YgcmFyZSBhbmQgY2xhc3NpYyBib29rcy4gRmluZCBtb3JlIGF0IHd3dy5mb3Jnb3R0ZW5ib29rcy5jb20gVGhpcyBib29rIGlzIGEgcmVwcm9kdWN0aW9uIG9mIGFuIGltcG9ydGFudCBoaXN0b3JpY2FsIHdvcmsuIgogICB9CiAgfSwKICB7CiAgICJraW5kIjogImJvb2tzI3ZvbHVtZSIsCiAgICJpZCI6ICJwemZqMTZJNWpLTUMiLAogICAiZXRhZyI6ICJVMGl5d0FlUkU3VSIsCiAgICJzZWxmTGluayI6ICJodHRwczovL3d3dy5nb29nbGVhcGlzLmNvbS9ib29rcy92MS92b2x1bWVzL3B6ZmoxNkk1aktNQyIsCiAgICJ2b2x1bWVJbmZvIjogewogICAgInRpdGxlIjogIk1vcmUgTGV0dGVycyBmcm9tIHRoZSBBbWVyaWNhbiBGYXJtZXIiLAogICAgInN1YnRpdGxlIjogIkFuIEVkaXRpb24gb2YgdGhlIEVzc2F5cyBpbiBFbmdsaXNoIExlZnQgVW5wdWJsaXNoZWQgYnkgQ3LDqHZlY29ldXIiLAogICAgImF1dGhvcnMiOiBbCiAgICAgIkouIEhlY3RvciBTdC4gSm9obiBkZSBDcsOodmVjb2V1ciIKICAgIF0sCiAgICAicHVibGlzaGVyIjogIlVuaXZlcnNpdHkgb2YgR2VvcmdpYSBQcmVzcyIsCiAgICAicHVibGlzaGVkRGF0ZSI6ICIxOTk1IiwKICAgICJkZXNjcmlwdGlvbiI6ICJUaGlzIGlzIGEgY3JpdGljYWwgZWRpdGlvbiBvZiB0aGUgZXNzYXlzIHRoYXQgSi4gSGVjdG9yIFN0LiBKb2huIGRlIENyw6h2ZWNvZXVyICgxNzM1LTE4MTMpIHdyb3RlIGluIEVuZ2xpc2ggYnV0IGRpZCBub3QgaW5jbHVkZSBpbiBMZXR0ZXJzIGZyb20gYW4gQW1lcmljYW4gRmFybWVyLiBGaXJzdCBwdWJsaXNoZWQgaW4gMTc4MiwgTGV0dGVycyBmcm9tIGFuIEFtZXJpY2FuIEZhcm1lciBpcyBhbiBlaWdodGVlbnRoLWNlbnR1cnkgY3VsdHVyYWwgbWFzdGVycGllY2UuIFdyaXR0ZW4gaW4gRW5nbGlzaCBieSBhIEZyZW5jaC1ib3JuIGltbWlncmFudCwgaXQgaXMgYSBjb2xsZWN0aW9uIG9mIHNlbWlhdXRvYmlvZ3JhcGhpY2FsIHdyaXRpbmdzIGluIGVwaXN0b2xhcnkgZm9ybSB0aGF0IGRlc2NyaWJlIGRhaWx5IGxpZmUgYWxvbmcgdGhlIG5vcnRoZXJuIGZyb250aWVyIGR1cmluZyB0aGUgZGF5cyBsZWFkaW5nIHVwIHRvIHRoZSBBbWVyaWNhbiBSZXZvbHV0aW9uLiBDb252ZXlpbmcgdGhlIGF0dGl0dWRlcywgYmVsaWVmcywgYXNwaXJhdGlvbnMsIGFuZCBjb25mbGljdGluZyBsb3lhbHRpZXMgb2YgY29tbW9uIHNldHRsZXJzLCBMZXR0ZXJzIGhhcyBoZWxwZWQgc3Vic2VxdWVudCBnZW5lcmF0aW9ucyB0byBncmFzcCB0aGUgZXRob3Mgb2YgYSBuYXNjZW50IEFtZXJpY2EuIE1vcmUgdGhhbiBhIGNlbnR1cnkgYWZ0ZXIgQ3JldmVjb2V1cidzIGRlYXRoLCB0aHJlZSBib3VuZCBtYW51c2NyaXB0IHZvbHVtZXMgc3VyZmFjZWQgdGhhdCBpbmNsdWRlZCBub3Qgb25seSB0aGUgb3JpZ2luYWwgaGFuZHdyaXR0ZW4gdGV4dHMgb2YgbW9zdCBvZiBMZXR0ZXJzIGJ1dCBhbHNvIHRoZSB0d2VudHktdHdvIHNpbWlsYXIgd3JpdGluZ3MgdGhhdCBub3cgbWFrZSB1cCBNb3JlIExldHRlcnMgZnJvbSB0aGUgQW1lcmljYW4gRmFybWVyLiBUaG9zZSBtYW51c2NyaXB0IHZvbHVtZXMgYXJlIG5vdyBob3VzZWQgaW4gdGhlIExpYnJhcnkgb2YgQ29uZ3Jlc3MuIEZpdmUgb2YgdGhlIHBpZWNlcyBpbiBNb3JlIExldHRlcnMgYXJlIHByZXZpb3VzbHkgdW5wdWJsaXNoZWQ7IHRoZSBvdGhlcnMgd2VyZSBmaXJzdCBwdWJsaXNoZWQgaW4gMTkyNS0yNiBidXQgd2VyZSBzbyBpbmNvbnNpc3RlbnRseSBhbmQgYXJiaXRyYXJpbHkgZWRpdGVkIGFzIHRvIG1pc3JlcHJlc2VudCB0aGUgYXV0aG9yLiBUaGlzIGVkaXRpb24gaGFzIGJlZW4gYXdhcmRlZCB0aGUgZW1ibGVtIG9mIHRoZSBNb2Rlcm4gTGFuZ3VhZ2UgQXNzb2NpYXRpb24ncyBDb21taXR0ZWUgb24gU2Nob2xhcmx5IEVkaXRpb25zLiBJdCBpcyBiYXNlZCBvbiBhbiBleGFtaW5hdGlvbiBvZiBhbGwgYXZhaWxhYmxlIHJlbGV2YW50IHRleHR1YWwgc291cmNlcyBhbmQgaW5jbHVkZXMgZXh0ZW5zaXZlIHRleHR1YWwgYW5kIGhpc3RvcmljYWwgY29udGV4dHVhbCBpbmZvcm1hdGlvbi4gUmF0aGVyIHRoYW4gbW9kZXJuaXppbmcgQ3JldmVjb2V1cidzIGNhcGl0YWxpemF0aW9uLCBwdW5jdHVhdGlvbiwgYW5kIHNwZWxsaW5nLCBEZW5uaXMgRC4gTW9vcmUgaGFzIHByZXNlcnZlZCB0aGUgb3JpZ2luYWwgdGV4dHMgYXMgY2xvc2VseSBhcyBwb3NzaWJsZS4gVGh1cywgTW9yZSBMZXR0ZXJzIG1hcmtzIHRoZSBmaXJzdCBhcHBlYXJhbmNlIG9mIHRoZXNlIHR3ZW50eS10d28gd3JpdGluZ3MgYXMgQ3JldmVjb2V1ciBjb21wb3NlZCB0aGVtLiBJbiBoaXMgZ2VuZXJhbCBpbnRyb2R1Y3Rpb24sIE1vb3JlIGRpc2N1c3NlcyB0aGUgdmFyaW91cyBwZXJzb25hZSB0aHJvdWdoIHdoaWNoIENyZXZlY29ldXIgc3BlYWtzIGluIHRoZXNlIGVzc2F5cyBhbmQgbm90ZXMgdGhlIHN0eWxpc3RpYyBhbmQgdG9waWNhbCBzaW1pbGFyaXRpZXMgYW5kIHZhcmlhdGlvbnMgYmV0d2VlbiB0aGVzZSB3cml0aW5ncyBhbmQgdGhvc2UgY29sbGVjdGVkIGluIExldHRlcnMuIFBvaW50aW5nIHRvIENyZXZlY29ldXIncyBldmlkZW50IGluZmx1ZW5jZXMgYW5kIGludGVyZXN0cywgTW9vcmUgZGlzY3Vzc2VzIHJlY3VycmVudCB0aGVtZXMgYW5kIGltYWdlcyByZWxhdGVkIHRvIG1lZGljaW5lLCBsYXcsIHJlbGlnaW9uLCBjbGFzc2ljaXNtLCBlbmxpZ2h0ZW5tZW50IHBoaWxvc29waHksIG5hdGlvbmFsaXNtLCBhZ3JhcmlhbmlzbSwgYWdncmVzc2lvbiBhbmQgd2FyLCBhbmQgdGhlIGN1bHRzIG9mIHNlbnNpYmlsaXR5IGFuZCBkb21lc3RpY2l0eS4gUmV2aXNpbmcgYW5kIGV4cGFuZGluZyB3aGF0IHdlIHRob3VnaHQgd2Uga25ldyBhYm91dCBDcmV2ZWNvZXVyIGFuZCBoaXMgbGlmZWxvbmcgYWJzb3JwdGlvbiBpbiBBbWVyaWNhIGFuZCBBbWVyaWNhbm5lc3MsIE1vcmUgTGV0dGVycyBhbHNvIG1ha2VzIGEgc2lnbmlmaWNhbnQgY29udHJpYnV0aW9uIHRvIHRoZSBzdHVkeSBvZiBlYXJseSBBbWVyaWNhbiBjdWx0dXJlLiIsCiAgICAiaW5kdXN0cnlJZGVudGlmaWVycyI6IFsKICAgICB7CiAgICAgICJ0eXBlIjogIklTQk5fMTAiLAogICAgICAiaWRlbnRpZmllciI6ICIwODIwMzE1OTkwIgogICAgIH0sCiAgICAgewogICAgICAidHlwZSI6ICJJU0JOXzEzIiwKICAgICAgImlkZW50aWZpZXIiOiAiOTc4MDgyMDMxNTk5NyIKICAgICB9CiAgICBdLAogICAgInJlYWRpbmdNb2RlcyI6IHsKICAgICAidGV4dCI6IGZhbHNlLAogICAgICJpbWFnZSI6IHRydWUKICAgIH0sCiAgICAicGFnZUNvdW50IjogNDkwLAogICAgInByaW50VHlwZSI6ICJCT09LIiwKICAgICJjYXRlZ29yaWVzIjogWwogICAgICJIaXN0b3J5IgogICAgXSwKICAgICJhdmVyYWdlUmF0aW5nIjogNS4wLAogICAgInJhdGluZ3NDb3VudCI6IDEsCiAgICAibWF0dXJpdHlSYXRpbmciOiAiTk9UX01BVFVSRSIsCiAgICAiYWxsb3dBbm9uTG9nZ2luZyI6IGZhbHNlLAogICAgImNvbnRlbnRWZXJzaW9uIjogIjAuMC4xLjAucHJldmlldy4xIiwKICAgICJpbWFnZUxpbmtzIjogewogICAgICJzbWFsbFRodW1ibmFpbCI6ICJodHRwOi8vYm9va3MuZ29vZ2xlLmNvbS9ib29rcy9jb250ZW50P2lkPXB6ZmoxNkk1aktNQyZwcmludHNlYz1mcm9udGNvdmVyJmltZz0xJnpvb209NSZlZGdlPWN1cmwmc291cmNlPWdic19hcGkiLAogICAgICJ0aHVtYm5haWwiOiAiaHR0cDovL2Jvb2tzLmdvb2dsZS5jb20vYm9va3MvY29udGVudD9pZD1wemZqMTZJNWpLTUMmcHJpbnRzZWM9ZnJvbnRjb3ZlciZpbWc9MSZ6b29tPTEmZWRnZT1jdXJsJnNvdXJjZT1nYnNfYXBpIgogICAgfSwKICAgICJsYW5ndWFnZSI6ICJlbiIsCiAgICAicHJldmlld0xpbmsiOiAiaHR0cDovL2Jvb2tzLmdvb2dsZS5jb20vYm9va3M/aWQ9cHpmajE2STVqS01DJnBnPVBBNDE4JmRxPWluYXV0aG9yOiZobD0mY2Q9NCZzb3VyY2U9Z2JzX2FwaSIsCiAgICAiaW5mb0xpbmsiOiAiaHR0cDovL2Jvb2tzLmdvb2dsZS5jb20vYm9va3M/aWQ9cHpmajE2STVqS01DJmRxPWluYXV0aG9yOiZobD0mc291cmNlPWdic19hcGkiLAogICAgImNhbm9uaWNhbFZvbHVtZUxpbmsiOiAiaHR0cHM6Ly9ib29rcy5nb29nbGUuY29tL2Jvb2tzL2Fib3V0L01vcmVfTGV0dGVyc19mcm9tX3RoZV9BbWVyaWNhbl9GYXJtZXIuaHRtbD9obD0maWQ9cHpmajE2STVqS01DIgogICB9LAogICAic2FsZUluZm8iOiB7CiAgICAiY291bnRyeSI6ICJVUyIsCiAgICAic2FsZWFiaWxpdHkiOiAiTk9UX0ZPUl9TQUxFIiwKICAgICJpc0Vib29rIjogZmFsc2UKICAgfSwKICAgImFjY2Vzc0luZm8iOiB7CiAgICAiY291bnRyeSI6ICJVUyIsCiAgICAidmlld2FiaWxpdHkiOiAiUEFSVElBTCIsCiAgICAiZW1iZWRkYWJsZSI6IHRydWUsCiAgICAicHVibGljRG9tYWluIjogZmFsc2UsCiAgICAidGV4dFRvU3BlZWNoUGVybWlzc2lvbiI6ICJBTExPV0VEIiwKICAgICJlcHViIjogewogICAgICJpc0F2YWlsYWJsZSI6IGZhbHNlCiAgICB9LAogICAgInBkZiI6IHsKICAgICAiaXNBdmFpbGFibGUiOiBmYWxzZQogICAgfSwKICAgICJ3ZWJSZWFkZXJMaW5rIjogImh0dHA6Ly9wbGF5Lmdvb2dsZS5jb20vYm9va3MvcmVhZGVyP2lkPXB6ZmoxNkk1aktNQyZobD0mcHJpbnRzZWM9ZnJvbnRjb3ZlciZzb3VyY2U9Z2JzX2FwaSIsCiAgICAiYWNjZXNzVmlld1N0YXR1cyI6ICJTQU1QTEUiLAogICAgInF1b3RlU2hhcmluZ0FsbG93ZWQiOiBmYWxzZQogICB9LAogICAic2VhcmNoSW5mbyI6IHsKICAgICJ0ZXh0U25pcHBldCI6ICIyMTguMjEgW2luIGFuXV0gSW50ZXJsaW5lYXRpb24gXHUwMDNjYlx1MDAzZWluIGF1dGhvciYjMzk7c1x1MDAzYy9iXHUwMDNlIGhhbmQuIDIxOC4yMiBbYnldXSBJbnRlcmxpbmVhdGlvbiBcdTAwM2NiXHUwMDNlaW5cdTAwM2MvYlx1MDAzZSBcdTAwM2Niclx1MDAzZVxuXHUwMDNjYlx1MDAzZWF1dGhvciYjMzk7c1x1MDAzYy9iXHUwMDNlIGhhbmQuIDIxOC4yNCByZWxpZXZpbmddIHZpbiB3cml0dGVuIG92ZXIgb3RoZXIgY2hhcmFjdGVycy4gUGVyaGFwc10gXHUwMDNjYnJcdTAwM2VcbkFkZGVkIGluLWxpbmUsIGluIHJpZ2h0IG1hcmdpbi4gMjE4LjMxIGFdIFJlcGVhdHMgd29yZCBhdCBiZWdpbm5pbmcgb2YgbGVhZiBJSUk6IDEyIFx1MDAzY2JyXHUwMDNlXG7igJQgYnV0IG9uJm5ic3A7Li4uIgogICB9CiAgfSwKICB7CiAgICJraW5kIjogImJvb2tzI3ZvbHVtZSIsCiAgICJpZCI6ICJNem11NGpqc3FDRUMiLAogICAiZXRhZyI6ICJBNTA5SGdLeEQrdyIsCiAgICJzZWxmTGluayI6ICJodHRwczovL3d3dy5nb29nbGVhcGlzLmNvbS9ib29rcy92MS92b2x1bWVzL016bXU0ampzcUNFQyIsCiAgICJ2b2x1bWVJbmZvIjogewogICAgInRpdGxlIjogIkludHJvZHVjdG9yeSBEaWdpdGFsIFN5c3RlbXMgZm9yIEVuZ2luZWVyaW5nIiwKICAgICJhdXRob3JzIjogWwogICAgICJNYWhvbWVkIFJhZmkgQmVyYSIKICAgIF0sCiAgICAicHVibGlzaGVyIjogIkp1dGEgYW5kIENvbXBhbnkgTHRkIiwKICAgICJwdWJsaXNoZWREYXRlIjogIjE5OTktMDEtMDEiLAogICAgImRlc2NyaXB0aW9uIjogIlRoaXMgYm9vayB0ZWFjaGVzIHRoZSBwcmluY2lwbGVzIGFuZCB0ZWNobmlxdWVzIG9mIGRpZ2l0YWwgc3lzdGVtcyB0aHJvdWdoIGEgcmFuZ2Ugb2YgZXhhbXBsZXMuSXQgaGFzIHN0ZXAtYnktc3RlcCBzb2x1dGlvbnMgdG8gZXhlcmNpc2VzIGFuZCBvdmVyIDIwMCBwcmFjdGljYWwgZXhhbXBsZXMsIGFjdGl2aXRpZXMgYW5kIHNlbGZldmFsdWF0aW9uIGV4ZXJjaXNlcyB0byBhc3Npc3QgdGhlIGxlYXJuZXIuIEEgZ2xvc3Nhcnkgb2YgaW1wb3J0YW50IHRlcm1zIG1ha2VzIGl0IGVhc2lseSBhY2Nlc3NpYmxlIHRvIHRoZSBuZXcgbGVhcm5lci4iLAogICAgImluZHVzdHJ5SWRlbnRpZmllcnMiOiBbCiAgICAgewogICAgICAidHlwZSI6ICJJU0JOXzEwIiwKICAgICAgImlkZW50aWZpZXIiOiAiMDcwMjE0NDA1MyIKICAgICB9LAogICAgIHsKICAgICAgInR5cGUiOiAiSVNCTl8xMyIsCiAgICAgICJpZGVudGlmaWVyIjogIjk3ODA3MDIxNDQwNTkiCiAgICAgfQogICAgXSwKICAgICJyZWFkaW5nTW9kZXMiOiB7CiAgICAgInRleHQiOiBmYWxzZSwKICAgICAiaW1hZ2UiOiB0cnVlCiAgICB9LAogICAgInBhZ2VDb3VudCI6IDI3MywKICAgICJwcmludFR5cGUiOiAiQk9PSyIsCiAgICAiY2F0ZWdvcmllcyI6IFsKICAgICAiVGVjaG5vbG9neSAmIEVuZ2luZWVyaW5nIgogICAgXSwKICAgICJhdmVyYWdlUmF0aW5nIjogMy41LAogICAgInJhdGluZ3NDb3VudCI6IDIsCiAgICAibWF0dXJpdHlSYXRpbmciOiAiTk9UX01BVFVSRSIsCiAgICAiYWxsb3dBbm9uTG9nZ2luZyI6IGZhbHNlLAogICAgImNvbnRlbnRWZXJzaW9uIjogIjAuMC4xLjAucHJldmlldy4xIiwKICAgICJpbWFnZUxpbmtzIjogewogICAgICJzbWFsbFRodW1ibmFpbCI6ICJodHRwOi8vYm9va3MuZ29vZ2xlLmNvbS9ib29rcy9jb250ZW50P2lkPU16bXU0ampzcUNFQyZwcmludHNlYz1mcm9udGNvdmVyJmltZz0xJnpvb209NSZlZGdlPWN1cmwmc291cmNlPWdic19hcGkiLAogICAgICJ0aHVtYm5haWwiOiAiaHR0cDovL2Jvb2tzLmdvb2dsZS5jb20vYm9va3MvY29udGVudD9pZD1Nem11NGpqc3FDRUMmcHJpbnRzZWM9ZnJvbnRjb3ZlciZpbWc9MSZ6b29tPTEmZWRnZT1jdXJsJnNvdXJjZT1nYnNfYXBpIgogICAgfSwKICAgICJsYW5ndWFnZSI6ICJlbiIsCiAgICAicHJldmlld0xpbmsiOiAiaHR0cDovL2Jvb2tzLmdvb2dsZS5jb20vYm9va3M/aWQ9TXptdTRqanNxQ0VDJnByaW50c2VjPWZyb250Y292ZXImZHE9aW5hdXRob3I6JmhsPSZjZD01JnNvdXJjZT1nYnNfYXBpIiwKICAgICJpbmZvTGluayI6ICJodHRwOi8vYm9va3MuZ29vZ2xlLmNvbS9ib29rcz9pZD1Nem11NGpqc3FDRUMmZHE9aW5hdXRob3I6JmhsPSZzb3VyY2U9Z2JzX2FwaSIsCiAgICAiY2Fub25pY2FsVm9sdW1lTGluayI6ICJodHRwczovL2Jvb2tzLmdvb2dsZS5jb20vYm9va3MvYWJvdXQvSW50cm9kdWN0b3J5X0RpZ2l0YWxfU3lzdGVtc19mb3JfRW5naW5lZS5odG1sP2hsPSZpZD1Nem11NGpqc3FDRUMiCiAgIH0sCiAgICJzYWxlSW5mbyI6IHsKICAgICJjb3VudHJ5IjogIlVTIiwKICAgICJzYWxlYWJpbGl0eSI6ICJOT1RfRk9SX1NBTEUiLAogICAgImlzRWJvb2siOiBmYWxzZQogICB9LAogICAiYWNjZXNzSW5mbyI6IHsKICAgICJjb3VudHJ5IjogIlVTIiwKICAgICJ2aWV3YWJpbGl0eSI6ICJQQVJUSUFMIiwKICAgICJlbWJlZGRhYmxlIjogdHJ1ZSwKICAgICJwdWJsaWNEb21haW4iOiBmYWxzZSwKICAgICJ0ZXh0VG9TcGVlY2hQZXJtaXNzaW9uIjogIkFMTE9XRUQiLAogICAgImVwdWIiOiB7CiAgICAgImlzQXZhaWxhYmxlIjogZmFsc2UKICAgIH0sCiAgICAicGRmIjogewogICAgICJpc0F2YWlsYWJsZSI6IGZhbHNlCiAgICB9LAogICAgIndlYlJlYWRlckxpbmsiOiAiaHR0cDovL3BsYXkuZ29vZ2xlLmNvbS9ib29rcy9yZWFkZXI/aWQ9TXptdTRqanNxQ0VDJmhsPSZwcmludHNlYz1mcm9udGNvdmVyJnNvdXJjZT1nYnNfYXBpIiwKICAgICJhY2Nlc3NWaWV3U3RhdHVzIjogIlNBTVBMRSIsCiAgICAicXVvdGVTaGFyaW5nQWxsb3dlZCI6IGZhbHNlCiAgIH0sCiAgICJzZWFyY2hJbmZvIjogewogICAgInRleHRTbmlwcGV0IjogIlRoaXMgYm9vayB0ZWFjaGVzIHRoZSBwcmluY2lwbGVzIGFuZCB0ZWNobmlxdWVzIG9mIGRpZ2l0YWwgc3lzdGVtcyB0aHJvdWdoIGEgcmFuZ2Ugb2YgZXhhbXBsZXMuSXQgaGFzIHN0ZXAtYnktc3RlcCBzb2x1dGlvbnMgdG8gZXhlcmNpc2VzIGFuZCBvdmVyIDIwMCBwcmFjdGljYWwgZXhhbXBsZXMsIGFjdGl2aXRpZXMgYW5kIHNlbGZldmFsdWF0aW9uIGV4ZXJjaXNlcyB0byBhc3Npc3QgdGhlIGxlYXJuZXIuIgogICB9CiAgfSwKICB7CiAgICJraW5kIjogImJvb2tzI3ZvbHVtZSIsCiAgICJpZCI6ICJ3YW93RHdBQVFCQUoiLAogICAiZXRhZyI6ICJjcUZNSVd2RFJlcyIsCiAgICJzZWxmTGluayI6ICJodHRwczovL3d3dy5nb29nbGVhcGlzLmNvbS9ib29rcy92MS92b2x1bWVzL3dhb3dEd0FBUUJBSiIsCiAgICJ2b2x1bWVJbmZvIjogewogICAgInRpdGxlIjogIkFzc2Fzc2luYXRpb24gb2YgYSBTYWludCIsCiAgICAic3VidGl0bGUiOiAiVGhlIFBsb3QgdG8gTXVyZGVyIMOTc2NhciBSb21lcm8gYW5kIHRoZSBRdWVzdCB0byBCcmluZyBIaXMgS2lsbGVycyB0byBKdXN0aWNlIiwKICAgICJhdXRob3JzIjogWwogICAgICJNYXR0IEVpc2VuYnJhbmR0IgogICAgXSwKICAgICJwdWJsaXNoZXIiOiAiVW5pdiBvZiBDYWxpZm9ybmlhIFByZXNzIiwKICAgICJwdWJsaXNoZWREYXRlIjogIjIwMTctMDEtMjQiLAogICAgImRlc2NyaXB0aW9uIjogIlwiSW5mb3JtYXRpb25hbCBnb3VsYXNoXCIgOiBwcmlvciBpbnZlc3RpZ2F0aW9ucyBvZiB0aGUgUm9tZXJvIGFzc2Fzc2luYXRpb24gLS0gXCJJbiB2aW9sYXRpb24gb2YgdGhlIGxhdyBvZiBuYXRpb25zXCIgOiB0aGUgUm9tZXJvIGFzc2Fzc2luYXRpb24gY29tZXMgdG8gdGhlIFVuaXRlZCBTdGF0ZXMgLS0gXCJUaGUgZW5lbXkgY29tZXMgZnJvbSBvdXIgcGVvcGxlXCIgOiBjb2ZmZWUsIGFudGktY29tbXVuaXNtLCBhbmQgdGhlIGRlYXRoIHNxdWFkcyAtLSBcIlRoZSBkb29yIG9mIGhpc3RvcnlcIiA6IEFyY2hiaXNob3AgUm9tZXJvIGFuZCB0aGUgQ2F0aG9saWMgQ2h1cmNoIGluIEVsIFNhbHZhZG9yIC0tIFwiQSBiZWQgdG8gZHJvcCBkZWFkIGluXCIgOiB0aGUgc2VhcmNoIGZvciDDgWx2YXJvIFNhcmF2aWEgYW5kIHRoZSBkZWF0aCBzcXVhZCBmaW5hbmNpZXJzIC0tIFwiQXJlbmEncyBBY2hpbGxlcycgaGVlbFwiIDogb3VyIGZpcnN0IHRyaXAgdG8gRWwgU2FsdmFkb3IgLS0gXCJCYWJ5IHJvYmJlcnMsIG1hZCBib21iZXJzLCBhbmQgb3RoZXIgYXNzb3J0ZWQgY3JpbWluYWxzXCIgOiBTYXJhdmlhJ3MgZXNjYXBlIHRvIE1pYW1pIGJyaW5ncyBVLlMuIGZvcmVpZ24gcG9saWN5IGZ1bGwgY2lyY2xlIC0tIFwiWW91J3JlIG1ha2luZyBhIGxvdCBvZiBub2lzZVwiIDogbG9va2luZyBmb3IgZXZpZGVuY2Ugb24gdGhlIGRlYXRoIHNxdWFkIGZpbmFuY2llcnMgLS0gXCJZb3Uga25vdyBiZXR0ZXIgdGhhbiB0byBhc2sgdGhhdFwiIDogdGhlIHNlYXJjaCBmb3IgdGhlIGdldGF3YXkgZHJpdmVyIC0tIFwiQSByYWJpZCBhbnRpLWNvbW11bmlzdFwiIDogbWVldGluZyB3aXRuZXNzZXMgZnJvbSB0aGUgQXJlbmEgcGFydHkgLS0gXCJXZSBkb24ndCBoYXZlIGEgY2x1ZSB3aGF0IHRoZSBoZWxsIGlzIGdvaW5nIG9uXCIgOiB0aGUgY29udGludWluZyBodW50IGZvciBTYXJhdmlhIGFuZCBpbnNpZGVyIHdpdG5lc3NlcyAtLSBcIkdvZCBmb3JnaXZlIG1lIGZvciB3aGF0IEknbSBnb2luZyB0byBkb1wiIDogYW4gaW5zaWRlciBnb2VzIG9uIHRoZSByZWNvcmQgLS0gXCJUaGVyZSBtdXN0IGhhdmUgYmVlbiBhIHRob3VzYW5kIFJvbWVyb3NcIiA6IGZpbmFsIGludGVydmlld3MgYW5kIHRyaWFsIHByZXBhcmF0aW9uIC0tIFwiT2YgYSBtYWduaXR1ZGUgdGhhdCBpcyBoYXJkbHkgZGVzY3JpYmFibGVcIiA6IHRoZSBSb21lcm8gYXNzYXNzaW5hdGlvbiBjYXNlIGdvZXMgdG8gdHJpYWwgLS0gXCJUaGUgZmxlYXMgYWx3YXlzIHN0aWNrIHRvIHRoZSBza2lubmllc3QgZG9nXCIgOiB0aGUgdmVyZGljdCdzIGltcGFjdCBvbiBTYXJhdmlhIiwKICAgICJpbmR1c3RyeUlkZW50aWZpZXJzIjogWwogICAgIHsKICAgICAgInR5cGUiOiAiSVNCTl8xMyIsCiAgICAgICJpZGVudGlmaWVyIjogIjk3ODA1MjAyODY4MDEiCiAgICAgfSwKICAgICB7CiAgICAgICJ0eXBlIjogIklTQk5fMTAiLAogICAgICAiaWRlbnRpZmllciI6ICIwNTIwMjg2ODA0IgogICAgIH0KICAgIF0sCiAgICAicmVhZGluZ01vZGVzIjogewogICAgICJ0ZXh0IjogZmFsc2UsCiAgICAgImltYWdlIjogdHJ1ZQogICAgfSwKICAgICJwYWdlQ291bnQiOiAyNTYsCiAgICAicHJpbnRUeXBlIjogIkJPT0siLAogICAgImNhdGVnb3JpZXMiOiBbCiAgICAgIkhpc3RvcnkiCiAgICBdLAogICAgIm1hdHVyaXR5UmF0aW5nIjogIk5PVF9NQVRVUkUiLAogICAgImFsbG93QW5vbkxvZ2dpbmciOiBmYWxzZSwKICAgICJjb250ZW50VmVyc2lvbiI6ICJwcmV2aWV3LTEuMC4wIiwKICAgICJwYW5lbGl6YXRpb25TdW1tYXJ5IjogewogICAgICJjb250YWluc0VwdWJCdWJibGVzIjogZmFsc2UsCiAgICAgImNvbnRhaW5zSW1hZ2VCdWJibGVzIjogZmFsc2UKICAgIH0sCiAgICAiaW1hZ2VMaW5rcyI6IHsKICAgICAic21hbGxUaHVtYm5haWwiOiAiaHR0cDovL2Jvb2tzLmdvb2dsZS5jb20vYm9va3MvY29udGVudD9pZD13YW93RHdBQVFCQUomcHJpbnRzZWM9ZnJvbnRjb3ZlciZpbWc9MSZ6b29tPTUmZWRnZT1jdXJsJnNvdXJjZT1nYnNfYXBpIiwKICAgICAidGh1bWJuYWlsIjogImh0dHA6Ly9ib29rcy5nb29nbGUuY29tL2Jvb2tzL2NvbnRlbnQ/aWQ9d2Fvd0R3QUFRQkFKJnByaW50c2VjPWZyb250Y292ZXImaW1nPTEmem9vbT0xJmVkZ2U9Y3VybCZzb3VyY2U9Z2JzX2FwaSIKICAgIH0sCiAgICAibGFuZ3VhZ2UiOiAiZW4iLAogICAgInByZXZpZXdMaW5rIjogImh0dHA6Ly9ib29rcy5nb29nbGUuY29tL2Jvb2tzP2lkPXdhb3dEd0FBUUJBSiZwZz1QQTIxNSZkcT1pbmF1dGhvcjomaGw9JmNkPTYmc291cmNlPWdic19hcGkiLAogICAgImluZm9MaW5rIjogImh0dHA6Ly9ib29rcy5nb29nbGUuY29tL2Jvb2tzP2lkPXdhb3dEd0FBUUJBSiZkcT1pbmF1dGhvcjomaGw9JnNvdXJjZT1nYnNfYXBpIiwKICAgICJjYW5vbmljYWxWb2x1bWVMaW5rIjogImh0dHBzOi8vYm9va3MuZ29vZ2xlLmNvbS9ib29rcy9hYm91dC9Bc3Nhc3NpbmF0aW9uX29mX2FfU2FpbnQuaHRtbD9obD0maWQ9d2Fvd0R3QUFRQkFKIgogICB9LAogICAic2FsZUluZm8iOiB7CiAgICAiY291bnRyeSI6ICJVUyIsCiAgICAic2FsZWFiaWxpdHkiOiAiTk9UX0ZPUl9TQUxFIiwKICAgICJpc0Vib29rIjogZmFsc2UKICAgfSwKICAgImFjY2Vzc0luZm8iOiB7CiAgICAiY291bnRyeSI6ICJVUyIsCiAgICAidmlld2FiaWxpdHkiOiAiUEFSVElBTCIsCiAgICAiZW1iZWRkYWJsZSI6IHRydWUsCiAgICAicHVibGljRG9tYWluIjogZmFsc2UsCiAgICAidGV4dFRvU3BlZWNoUGVybWlzc2lvbiI6ICJBTExPV0VEIiwKICAgICJlcHViIjogewogICAgICJpc0F2YWlsYWJsZSI6IGZhbHNlCiAgICB9LAogICAgInBkZiI6IHsKICAgICAiaXNBdmFpbGFibGUiOiBmYWxzZQogICAgfSwKICAgICJ3ZWJSZWFkZXJMaW5rIjogImh0dHA6Ly9wbGF5Lmdvb2dsZS5jb20vYm9va3MvcmVhZGVyP2lkPXdhb3dEd0FBUUJBSiZobD0mcHJpbnRzZWM9ZnJvbnRjb3ZlciZzb3VyY2U9Z2JzX2FwaSIsCiAgICAiYWNjZXNzVmlld1N0YXR1cyI6ICJTQU1QTEUiLAogICAgInF1b3RlU2hhcmluZ0FsbG93ZWQiOiBmYWxzZQogICB9LAogICAic2VhcmNoSW5mbyI6IHsKICAgICJ0ZXh0U25pcHBldCI6ICJcdTAwM2NiXHUwMDNlSW4gYXV0aG9yJiMzOTtzXHUwMDNjL2JcdTAwM2UgcG9zc2Vzc2lvbi4gRGVjbGFyYXRpb24gb2YgSnVsaW8gQWxmcmVkbyBTYW1heW9hIHRvIHRoZSBGb3VydGggXHUwMDNjYnJcdTAwM2VcbkNyaW1pbmFsIENvdXJ0LiBGZWJydWFyeSAyMSwgMTk4OS4gXHUwMDNjYlx1MDAzZUluIGF1dGhvciYjMzk7c1x1MDAzYy9iXHUwMDNlIHBvc3Nlc3Npb24uIERlY2xhcmF0aW9uIG9mIE1hcsOtYSBcdTAwM2Niclx1MDAzZVxuZGVsIFNvY29ycm8gSXJhaGV0YSBGbG9yZXMgdG8gdGhlIEZvdXJ0aCBDcmltaW5hbCBDb3VydC4gRGVjZW1iZXIgMTgsIDE5ODUuIFx1MDAzY2JcdTAwM2VJblx1MDAzYy9iXHUwMDNlIFx1MDAzY2JyXHUwMDNlXG5cdTAwM2NiXHUwMDNlYXV0aG9yJiMzOTtzXHUwMDNjL2JcdTAwM2UmbmJzcDsuLi4iCiAgIH0KICB9LAogIHsKICAgImtpbmQiOiAiYm9va3Mjdm9sdW1lIiwKICAgImlkIjogIkNkOEtYNlVScG44QyIsCiAgICJldGFnIjogIjB0cm5GQ05hbmRnIiwKICAgInNlbGZMaW5rIjogImh0dHBzOi8vd3d3Lmdvb2dsZWFwaXMuY29tL2Jvb2tzL3YxL3ZvbHVtZXMvQ2Q4S1g2VVJwbjhDIiwKICAgInZvbHVtZUluZm8iOiB7CiAgICAidGl0bGUiOiAiTWFsZSBIb21vc2V4dWFsaXR5IGluIFdlc3QgR2VybWFueSIsCiAgICAic3VidGl0bGUiOiAiQmV0d2VlbiBQZXJzZWN1dGlvbiBhbmQgRnJlZWRvbSwgMTk0NS02OSIsCiAgICAiYXV0aG9ycyI6IFsKICAgICAiQ2xheXRvbiBKLiBXaGlzbmFudCIKICAgIF0sCiAgICAicHVibGlzaGVyIjogIlNwcmluZ2VyIiwKICAgICJwdWJsaXNoZWREYXRlIjogIjIwMTItMDUtMjIiLAogICAgImRlc2NyaXB0aW9uIjogIldoaXNuYW50IGFyZ3VlcyB0aGF0IHRoZSBwZXJpb2QgYWZ0ZXIgTmF6aXNtIHdhcyBtb3JlIGltcG9ydGFudCBmb3IgdGhlIGhpc3Rvcnkgb2YgaG9tb3NleHVhbGl0eSBpbiBHZXJtYW55IHRoYW4gaXMgZ2VuZXJhbGx5IHJlY29nbml6ZWQuIEdheSBzY2VuZXMgcmVzdXJmYWNlZDsgYSBtb3JlIG1hc2N1bGluZSB2aWV3IG9mIGhvbW9zZXh1YWxpdHkgYWxzbyBiZWNhbWUgcHJvbWluZW50LiBBYm92ZSBhbGwsIGEgcHVibGljIGRlYmF0ZSBhYm91dCBob21vc2V4dWFsaXR5IGVtZXJnZWQsIGNvbnN0aXR1dGluZyBhIGNyaXRpY2FsIGRlYmF0ZSB3aXRoaW4gdGhlIFNleHVhbCBSZXZvbHV0aW9uLiIsCiAgICAiaW5kdXN0cnlJZGVudGlmaWVycyI6IFsKICAgICB7CiAgICAgICJ0eXBlIjogIklTQk5fMTMiLAogICAgICAiaWRlbnRpZmllciI6ICI5NzgxMTM3MDI4MzQxIgogICAgIH0sCiAgICAgewogICAgICAidHlwZSI6ICJJU0JOXzEwIiwKICAgICAgImlkZW50aWZpZXIiOiAiMTEzNzAyODM0MyIKICAgICB9CiAgICBdLAogICAgInJlYWRpbmdNb2RlcyI6IHsKICAgICAidGV4dCI6IHRydWUsCiAgICAgImltYWdlIjogdHJ1ZQogICAgfSwKICAgICJwYWdlQ291bnQiOiAyNjIsCiAgICAicHJpbnRUeXBlIjogIkJPT0siLAogICAgImNhdGVnb3JpZXMiOiBbCiAgICAgIlNvY2lhbCBTY2llbmNlIgogICAgXSwKICAgICJtYXR1cml0eVJhdGluZyI6ICJOT1RfTUFUVVJFIiwKICAgICJhbGxvd0Fub25Mb2dnaW5nIjogZmFsc2UsCiAgICAiY29udGVudFZlcnNpb24iOiAiMy43LjkuMC5wcmV2aWV3LjMiLAogICAgInBhbmVsaXphdGlvblN1bW1hcnkiOiB7CiAgICAgImNvbnRhaW5zRXB1YkJ1YmJsZXMiOiBmYWxzZSwKICAgICAiY29udGFpbnNJbWFnZUJ1YmJsZXMiOiBmYWxzZQogICAgfSwKICAgICJpbWFnZUxpbmtzIjogewogICAgICJzbWFsbFRodW1ibmFpbCI6ICJodHRwOi8vYm9va3MuZ29vZ2xlLmNvbS9ib29rcy9jb250ZW50P2lkPUNkOEtYNlVScG44QyZwcmludHNlYz1mcm9udGNvdmVyJmltZz0xJnpvb209NSZlZGdlPWN1cmwmc291cmNlPWdic19hcGkiLAogICAgICJ0aHVtYm5haWwiOiAiaHR0cDovL2Jvb2tzLmdvb2dsZS5jb20vYm9va3MvY29udGVudD9pZD1DZDhLWDZVUnBuOEMmcHJpbnRzZWM9ZnJvbnRjb3ZlciZpbWc9MSZ6b29tPTEmZWRnZT1jdXJsJnNvdXJjZT1nYnNfYXBpIgogICAgfSwKICAgICJsYW5ndWFnZSI6ICJlbiIsCiAgICAicHJldmlld0xpbmsiOiAiaHR0cDovL2Jvb2tzLmdvb2dsZS5jb20vYm9va3M/aWQ9Q2Q4S1g2VVJwbjhDJnBnPVBUMjMxJmRxPWluYXV0aG9yOiZobD0mY2Q9NyZzb3VyY2U9Z2JzX2FwaSIsCiAgICAiaW5mb0xpbmsiOiAiaHR0cHM6Ly9wbGF5Lmdvb2dsZS5jb20vc3RvcmUvYm9va3MvZGV0YWlscz9pZD1DZDhLWDZVUnBuOEMmc291cmNlPWdic19hcGkiLAogICAgImNhbm9uaWNhbFZvbHVtZUxpbmsiOiAiaHR0cHM6Ly9tYXJrZXQuYW5kcm9pZC5jb20vZGV0YWlscz9pZD1ib29rLUNkOEtYNlVScG44QyIKICAgfSwKICAgInNhbGVJbmZvIjogewogICAgImNvdW50cnkiOiAiVVMiLAogICAgInNhbGVhYmlsaXR5IjogIkZPUl9TQUxFX0FORF9SRU5UQUwiLAogICAgImlzRWJvb2siOiB0cnVlLAogICAgImxpc3RQcmljZSI6IHsKICAgICAiYW1vdW50IjogOTkuMCwKICAgICAiY3VycmVuY3lDb2RlIjogIlVTRCIKICAgIH0sCiAgICAicmV0YWlsUHJpY2UiOiB7CiAgICAgImFtb3VudCI6IDc5LjIsCiAgICAgImN1cnJlbmN5Q29kZSI6ICJVU0QiCiAgICB9LAogICAgImJ1eUxpbmsiOiAiaHR0cHM6Ly9wbGF5Lmdvb2dsZS5jb20vc3RvcmUvYm9va3MvZGV0YWlscz9pZD1DZDhLWDZVUnBuOEMmcmRpZD1ib29rLUNkOEtYNlVScG44QyZyZG90PTEmc291cmNlPWdic19hcGkiLAogICAgIm9mZmVycyI6IFsKICAgICB7CiAgICAgICJmaW5za3lPZmZlclR5cGUiOiAxLAogICAgICAibGlzdFByaWNlIjogewogICAgICAgImFtb3VudEluTWljcm9zIjogOS45RTcsCiAgICAgICAiY3VycmVuY3lDb2RlIjogIlVTRCIKICAgICAgfSwKICAgICAgInJldGFpbFByaWNlIjogewogICAgICAgImFtb3VudEluTWljcm9zIjogNy45MkU3LAogICAgICAgImN1cnJlbmN5Q29kZSI6ICJVU0QiCiAgICAgIH0sCiAgICAgICJnaWZ0YWJsZSI6IHRydWUKICAgICB9LAogICAgIHsKICAgICAgImZpbnNreU9mZmVyVHlwZSI6IDMsCiAgICAgICJsaXN0UHJpY2UiOiB7CiAgICAgICAiYW1vdW50SW5NaWNyb3MiOiAzLjQ2NUU3LAogICAgICAgImN1cnJlbmN5Q29kZSI6ICJVU0QiCiAgICAgIH0sCiAgICAgICJyZXRhaWxQcmljZSI6IHsKICAgICAgICJhbW91bnRJbk1pY3JvcyI6IDMuMDE1RTcsCiAgICAgICAiY3VycmVuY3lDb2RlIjogIlVTRCIKICAgICAgfSwKICAgICAgInJlbnRhbER1cmF0aW9uIjogewogICAgICAgInVuaXQiOiAiREFZIiwKICAgICAgICJjb3VudCI6IDkwLjAKICAgICAgfQogICAgIH0KICAgIF0KICAgfSwKICAgImFjY2Vzc0luZm8iOiB7CiAgICAiY291bnRyeSI6ICJVUyIsCiAgICAidmlld2FiaWxpdHkiOiAiUEFSVElBTCIsCiAgICAiZW1iZWRkYWJsZSI6IHRydWUsCiAgICAicHVibGljRG9tYWluIjogZmFsc2UsCiAgICAidGV4dFRvU3BlZWNoUGVybWlzc2lvbiI6ICJBTExPV0VEX0ZPUl9BQ0NFU1NJQklMSVRZIiwKICAgICJlcHViIjogewogICAgICJpc0F2YWlsYWJsZSI6IHRydWUsCiAgICAgImFjc1Rva2VuTGluayI6ICJodHRwOi8vYm9va3MuZ29vZ2xlLmNvbS9ib29rcy9kb3dubG9hZC9NYWxlX0hvbW9zZXh1YWxpdHlfaW5fV2VzdF9HZXJtYW55LXNhbXBsZS1lcHViLmFjc20/aWQ9Q2Q4S1g2VVJwbjhDJmZvcm1hdD1lcHViJm91dHB1dD1hY3M0X2Z1bGZpbGxtZW50X3Rva2VuJmRsX3R5cGU9c2FtcGxlJnNvdXJjZT1nYnNfYXBpIgogICAgfSwKICAgICJwZGYiOiB7CiAgICAgImlzQXZhaWxhYmxlIjogdHJ1ZSwKICAgICAiYWNzVG9rZW5MaW5rIjogImh0dHA6Ly9ib29rcy5nb29nbGUuY29tL2Jvb2tzL2Rvd25sb2FkL01hbGVfSG9tb3NleHVhbGl0eV9pbl9XZXN0X0dlcm1hbnktc2FtcGxlLXBkZi5hY3NtP2lkPUNkOEtYNlVScG44QyZmb3JtYXQ9cGRmJm91dHB1dD1hY3M0X2Z1bGZpbGxtZW50X3Rva2VuJmRsX3R5cGU9c2FtcGxlJnNvdXJjZT1nYnNfYXBpIgogICAgfSwKICAgICJ3ZWJSZWFkZXJMaW5rIjogImh0dHA6Ly9wbGF5Lmdvb2dsZS5jb20vYm9va3MvcmVhZGVyP2lkPUNkOEtYNlVScG44QyZobD0mcHJpbnRzZWM9ZnJvbnRjb3ZlciZzb3VyY2U9Z2JzX2FwaSIsCiAgICAiYWNjZXNzVmlld1N0YXR1cyI6ICJTQU1QTEUiLAogICAgInF1b3RlU2hhcmluZ0FsbG93ZWQiOiBmYWxzZQogICB9LAogICAic2VhcmNoSW5mbyI6IHsKICAgICJ0ZXh0U25pcHBldCI6ICJLLiwgQW5kcmVhcyAocHNldWRvbnltKS4gVHJhbnNjcmlwdCBvZnVucHVibGlzaGVkIGludGVydmlldyB3aXRoIFx1MDAzY2JyXHUwMDNlXG5BcmJlaXRza3JlaXNzY2h3dWxlIEdlc2NoaWNodGUgSGFtYnVyZyAoV29sZmdhbmcgVm9pZ3QsIEplbnMgTWljaGVsc2VuLCBcdTAwM2Niclx1MDAzZVxuS2xhdXNQZXRlckFkYW1jemlrIGFuZErDvHJnZW4gTGVta2UpLEp1bHkyMiwgMTk5MiwgSGFtYnVyZy4gVHJhbnNjcmlwdCBcdTAwM2Niclx1MDAzZVxuXHUwMDNjYlx1MDAzZWluYXV0aG9yJiMzOTtzXHUwMDNjL2JcdTAwM2UgcG9zc2Vzc2lvbi4iCiAgIH0KICB9LAogIHsKICAgImtpbmQiOiAiYm9va3Mjdm9sdW1lIiwKICAgImlkIjogIlJRTnREd0FBUUJBSiIsCiAgICJldGFnIjogIlhlS1o3cWVQYjQ4IiwKICAgInNlbGZMaW5rIjogImh0dHBzOi8vd3d3Lmdvb2dsZWFwaXMuY29tL2Jvb2tzL3YxL3ZvbHVtZXMvUlFOdER3QUFRQkFKIiwKICAgInZvbHVtZUluZm8iOiB7CiAgICAidGl0bGUiOiAiUmV2aXNpb25zIG9mIEluZGlhbiBGb3NzaWwgUGxhbnRzLCBQYXJ0IElJSSIsCiAgICAic3VidGl0bGUiOiAiTW9ub2NvdHlsZWRvbnMiLAogICAgImF1dGhvcnMiOiBbCiAgICAgIlNhaG5pIEJpcmJhbCIKICAgIF0sCiAgICAicHVibGlzaGVyIjogIkFsZXhhbmRlciBEb3dlbGQiLAogICAgInB1Ymxpc2hlZERhdGUiOiAiMTk2NC0xMS0wMSIsCiAgICAicmVhZGluZ01vZGVzIjogewogICAgICJ0ZXh0IjogZmFsc2UsCiAgICAgImltYWdlIjogdHJ1ZQogICAgfSwKICAgICJwYWdlQ291bnQiOiA4OCwKICAgICJwcmludFR5cGUiOiAiQk9PSyIsCiAgICAiY2F0ZWdvcmllcyI6IFsKICAgICAiU2NpZW5jZSIKICAgIF0sCiAgICAibWF0dXJpdHlSYXRpbmciOiAiTk9UX01BVFVSRSIsCiAgICAiYWxsb3dBbm9uTG9nZ2luZyI6IGZhbHNlLAogICAgImNvbnRlbnRWZXJzaW9uIjogInByZXZpZXctMS4wLjAiLAogICAgInBhbmVsaXphdGlvblN1bW1hcnkiOiB7CiAgICAgImNvbnRhaW5zRXB1YkJ1YmJsZXMiOiBmYWxzZSwKICAgICAiY29udGFpbnNJbWFnZUJ1YmJsZXMiOiBmYWxzZQogICAgfSwKICAgICJpbWFnZUxpbmtzIjogewogICAgICJzbWFsbFRodW1ibmFpbCI6ICJodHRwOi8vYm9va3MuZ29vZ2xlLmNvbS9ib29rcy9jb250ZW50P2lkPVJRTnREd0FBUUJBSiZwcmludHNlYz1mcm9udGNvdmVyJmltZz0xJnpvb209NSZlZGdlPWN1cmwmc291cmNlPWdic19hcGkiLAogICAgICJ0aHVtYm5haWwiOiAiaHR0cDovL2Jvb2tzLmdvb2dsZS5jb20vYm9va3MvY29udGVudD9pZD1SUU50RHdBQVFCQUomcHJpbnRzZWM9ZnJvbnRjb3ZlciZpbWc9MSZ6b29tPTEmZWRnZT1jdXJsJnNvdXJjZT1nYnNfYXBpIgogICAgfSwKICAgICJsYW5ndWFnZSI6ICJlbiIsCiAgICAicHJldmlld0xpbmsiOiAiaHR0cDovL2Jvb2tzLmdvb2dsZS5jb20vYm9va3M/aWQ9UlFOdER3QUFRQkFKJnBnPVBBNzImZHE9aW5hdXRob3I6JmhsPSZjZD04JnNvdXJjZT1nYnNfYXBpIiwKICAgICJpbmZvTGluayI6ICJodHRwOi8vYm9va3MuZ29vZ2xlLmNvbS9ib29rcz9pZD1SUU50RHdBQVFCQUomZHE9aW5hdXRob3I6JmhsPSZzb3VyY2U9Z2JzX2FwaSIsCiAgICAiY2Fub25pY2FsVm9sdW1lTGluayI6ICJodHRwczovL2Jvb2tzLmdvb2dsZS5jb20vYm9va3MvYWJvdXQvUmV2aXNpb25zX29mX0luZGlhbl9Gb3NzaWxfUGxhbnRzX1BhcnRfSS5odG1sP2hsPSZpZD1SUU50RHdBQVFCQUoiCiAgIH0sCiAgICJzYWxlSW5mbyI6IHsKICAgICJjb3VudHJ5IjogIlVTIiwKICAgICJzYWxlYWJpbGl0eSI6ICJOT1RfRk9SX1NBTEUiLAogICAgImlzRWJvb2siOiBmYWxzZQogICB9LAogICAiYWNjZXNzSW5mbyI6IHsKICAgICJjb3VudHJ5IjogIlVTIiwKICAgICJ2aWV3YWJpbGl0eSI6ICJBTExfUEFHRVMiLAogICAgImVtYmVkZGFibGUiOiB0cnVlLAogICAgInB1YmxpY0RvbWFpbiI6IGZhbHNlLAogICAgInRleHRUb1NwZWVjaFBlcm1pc3Npb24iOiAiQUxMT1dFRCIsCiAgICAiZXB1YiI6IHsKICAgICAiaXNBdmFpbGFibGUiOiBmYWxzZQogICAgfSwKICAgICJwZGYiOiB7CiAgICAgImlzQXZhaWxhYmxlIjogZmFsc2UKICAgIH0sCiAgICAid2ViUmVhZGVyTGluayI6ICJodHRwOi8vcGxheS5nb29nbGUuY29tL2Jvb2tzL3JlYWRlcj9pZD1SUU50RHdBQVFCQUomaGw9JnByaW50c2VjPWZyb250Y292ZXImc291cmNlPWdic19hcGkiLAogICAgImFjY2Vzc1ZpZXdTdGF0dXMiOiAiU0FNUExFIiwKICAgICJxdW90ZVNoYXJpbmdBbGxvd2VkIjogZmFsc2UKICAgfSwKICAgInNlYXJjaEluZm8iOiB7CiAgICAidGV4dFNuaXBwZXQiOiAiUmVjLiBHIGZpZ3MuIDQsIDUuIDMzLDk1OC4gUGwuIDEsIGZpZy4gUy4gQzE3NiwgUGwuIDEsIGZpZ3MsIDktMTEuIEF1dGhvciYjMzk7cyBDb2xsLiBQbHMgMSAmYW1wOyBcdTAwM2Niclx1MDAzZVxuMiwgZmlncy4gMTIgQXV0aG9yJiMzOTtzIENvbGwuIFBsLiAxMSwgZmlncywgNzUtNzc7IGR1cGwuIGluIEcuUy5JLiBOYWdwdXIgTXVzLiwgUC4gZmlnLjogXHUwMDNjYnJcdTAwM2VcbmR1cGwuIFx1MDAzY2JcdTAwM2VpbiBhdXRob3ImIzM5O3NcdTAwM2MvYlx1MDAzZSBDb2xsLiAmYW1wOyBHIEJyaXQuIE11cy4gdi43OTUzLCBWLjc5NTcgYW5kIFJveS4gQ29sbC4gU3VyZy4gTG9uZC4gXHUwMDNjYnJcdTAwM2VcblJSLiIKICAgfQogIH0sCiAgewogICAia2luZCI6ICJib29rcyN2b2x1bWUiLAogICAiaWQiOiAieVRsQ0FRQUFNQUFKIiwKICAgImV0YWciOiAiSVJ1VUY1aHBIMXciLAogICAic2VsZkxpbmsiOiAiaHR0cHM6Ly93d3cuZ29vZ2xlYXBpcy5jb20vYm9va3MvdjEvdm9sdW1lcy95VGxDQVFBQU1BQUoiLAogICAidm9sdW1lSW5mbyI6IHsKICAgICJ0aXRsZSI6ICJDbGFzc2lmaWVkIENhdGFsb2d1ZSBvZiB0aGUgUHVibGljIExpYnJhcnksIG9mIEZpdGNoYnVyZyBNYXNzIiwKICAgICJzdWJ0aXRsZSI6ICJDb21wcmlzaW5nIEF1dGhvciBhbmQgVGl0bGUgQ2F0YWxvZ3VlLCBTdWJqZWN0IENhdGFsb2d1ZSwgYW5kIFN1YmplY3QgSW5kZXgiLAogICAgImF1dGhvcnMiOiBbCiAgICAgIkZpdGNoYnVyZyAoTWFzcy4pLiBQdWJsaWMgTGlicmFyeSIKICAgIF0sCiAgICAicHVibGlzaGVkRGF0ZSI6ICIxODg2IiwKICAgICJpbmR1c3RyeUlkZW50aWZpZXJzIjogWwogICAgIHsKICAgICAgInR5cGUiOiAiT1RIRVIiLAogICAgICAiaWRlbnRpZmllciI6ICJVQ0FMOiRDMjE3NTI1IgogICAgIH0KICAgIF0sCiAgICAicmVhZGluZ01vZGVzIjogewogICAgICJ0ZXh0IjogZmFsc2UsCiAgICAgImltYWdlIjogdHJ1ZQogICAgfSwKICAgICJwYWdlQ291bnQiOiA3NTgsCiAgICAicHJpbnRUeXBlIjogIkJPT0siLAogICAgImNhdGVnb3JpZXMiOiBbCiAgICAgIkxpYnJhcnkgY2F0YWxvZ3MiCiAgICBdLAogICAgIm1hdHVyaXR5UmF0aW5nIjogIk5PVF9NQVRVUkUiLAogICAgImFsbG93QW5vbkxvZ2dpbmciOiBmYWxzZSwKICAgICJjb250ZW50VmVyc2lvbiI6ICIwLjAuMi4wLmZ1bGwuMSIsCiAgICAicGFuZWxpemF0aW9uU3VtbWFyeSI6IHsKICAgICAiY29udGFpbnNFcHViQnViYmxlcyI6IGZhbHNlLAogICAgICJjb250YWluc0ltYWdlQnViYmxlcyI6IGZhbHNlCiAgICB9LAogICAgImltYWdlTGlua3MiOiB7CiAgICAgInNtYWxsVGh1bWJuYWlsIjogImh0dHA6Ly9ib29rcy5nb29nbGUuY29tL2Jvb2tzL2NvbnRlbnQ/aWQ9eVRsQ0FRQUFNQUFKJnByaW50c2VjPWZyb250Y292ZXImaW1nPTEmem9vbT01JmVkZ2U9Y3VybCZzb3VyY2U9Z2JzX2FwaSIsCiAgICAgInRodW1ibmFpbCI6ICJodHRwOi8vYm9va3MuZ29vZ2xlLmNvbS9ib29rcy9jb250ZW50P2lkPXlUbENBUUFBTUFBSiZwcmludHNlYz1mcm9udGNvdmVyJmltZz0xJnpvb209MSZlZGdlPWN1cmwmc291cmNlPWdic19hcGkiCiAgICB9LAogICAgImxhbmd1YWdlIjogImVuIiwKICAgICJwcmV2aWV3TGluayI6ICJodHRwOi8vYm9va3MuZ29vZ2xlLmNvbS9ib29rcz9pZD15VGxDQVFBQU1BQUomcGc9UEExODgmZHE9aW5hdXRob3I6JmhsPSZjZD05JnNvdXJjZT1nYnNfYXBpIiwKICAgICJpbmZvTGluayI6ICJodHRwczovL3BsYXkuZ29vZ2xlLmNvbS9zdG9yZS9ib29rcy9kZXRhaWxzP2lkPXlUbENBUUFBTUFBSiZzb3VyY2U9Z2JzX2FwaSIsCiAgICAiY2Fub25pY2FsVm9sdW1lTGluayI6ICJodHRwczovL21hcmtldC5hbmRyb2lkLmNvbS9kZXRhaWxzP2lkPWJvb2steVRsQ0FRQUFNQUFKIgogICB9LAogICAic2FsZUluZm8iOiB7CiAgICAiY291bnRyeSI6ICJVUyIsCiAgICAic2FsZWFiaWxpdHkiOiAiRlJFRSIsCiAgICAiaXNFYm9vayI6IHRydWUsCiAgICAiYnV5TGluayI6ICJodHRwczovL3BsYXkuZ29vZ2xlLmNvbS9zdG9yZS9ib29rcy9kZXRhaWxzP2lkPXlUbENBUUFBTUFBSiZyZGlkPWJvb2steVRsQ0FRQUFNQUFKJnJkb3Q9MSZzb3VyY2U9Z2JzX2FwaSIKICAgfSwKICAgImFjY2Vzc0luZm8iOiB7CiAgICAiY291bnRyeSI6ICJVUyIsCiAgICAidmlld2FiaWxpdHkiOiAiQUxMX1BBR0VTIiwKICAgICJlbWJlZGRhYmxlIjogdHJ1ZSwKICAgICJwdWJsaWNEb21haW4iOiB0cnVlLAogICAgInRleHRUb1NwZWVjaFBlcm1pc3Npb24iOiAiQUxMT1dFRCIsCiAgICAiZXB1YiI6IHsKICAgICAiaXNBdmFpbGFibGUiOiBmYWxzZQogICAgfSwKICAgICJwZGYiOiB7CiAgICAgImlzQXZhaWxhYmxlIjogZmFsc2UKICAgIH0sCiAgICAid2ViUmVhZGVyTGluayI6ICJodHRwOi8vcGxheS5nb29nbGUuY29tL2Jvb2tzL3JlYWRlcj9pZD15VGxDQVFBQU1BQUomaGw9JnByaW50c2VjPWZyb250Y292ZXImc291cmNlPWdic19hcGkiLAogICAgImFjY2Vzc1ZpZXdTdGF0dXMiOiAiRlVMTF9QVUJMSUNfRE9NQUlOIiwKICAgICJxdW90ZVNoYXJpbmdBbGxvd2VkIjogZmFsc2UKICAgfSwKICAgInNlYXJjaEluZm8iOiB7CiAgICAidGV4dFNuaXBwZXQiOiAiOTIzLjEgUjIg4oCUIEh1Z3Vlbm90OiBhIHRhbGUgb2YgdGhlIEZyZW5jaCBwcm90ZXN0YW50cy4gYW5vbi4gMiB2LiBpbiAxLiBELiBOLlkuIFx1MDAzY2JyXHUwMDNlXG4xODU1LiAyIEoxOCDigJQgS2luZyYjMzk7cyBoaWdod2F5LiAyIHYuIGluIDEuIEQuIG4ucC4gbi5kLiAyIEoxOSDigJQgTGFzdCAwMSB0aGUgZmFpcmllcyA6IGEgXHUwMDNjYnJcdTAwM2VcbkNocmlzdG1hcyB0YWxlLiAoXHUwMDNjYlx1MDAzZUluIGF1dGhvciYjMzk7c1x1MDAzYy9iXHUwMDNlIEZvcmVzdCBkYXlzLiBPLiAxODUxLikgMiBKMTEg4oCUIExpZmUgYW5kIGFkdmVudHVyZXMgb2ZcdTAwM2Niclx1MDAzZVxuJm5ic3A7Li4uIgogICB9CiAgfSwKICB7CiAgICJraW5kIjogImJvb2tzI3ZvbHVtZSIsCiAgICJpZCI6ICIxcU1wc3dFQUNBQUoiLAogICAiZXRhZyI6ICJnTVBkaGFJTEtobyIsCiAgICJzZWxmTGluayI6ICJodHRwczovL3d3dy5nb29nbGVhcGlzLmNvbS9ib29rcy92MS92b2x1bWVzLzFxTXBzd0VBQ0FBSiIsCiAgICJ2b2x1bWVJbmZvIjogewogICAgInRpdGxlIjogIlRyaXBwaW5ncyBpbiBBdXRob3ItbGFuZCwgYnkgRi5GLiIsCiAgICAiYXV0aG9ycyI6IFsKICAgICAiRmFubnkgRk9SRVNURVIgKHBzZXVkLikiCiAgICBdLAogICAgInB1Ymxpc2hlZERhdGUiOiAiMTg0NiIsCiAgICAiaW5kdXN0cnlJZGVudGlmaWVycyI6IFsKICAgICB7CiAgICAgICJ0eXBlIjogIk9USEVSIiwKICAgICAgImlkZW50aWZpZXIiOiAiT0NMQzo1NTg5MDc2MTQiCiAgICAgfQogICAgXSwKICAgICJyZWFkaW5nTW9kZXMiOiB7CiAgICAgInRleHQiOiBmYWxzZSwKICAgICAiaW1hZ2UiOiBmYWxzZQogICAgfSwKICAgICJwcmludFR5cGUiOiAiQk9PSyIsCiAgICAibWF0dXJpdHlSYXRpbmciOiAiTk9UX01BVFVSRSIsCiAgICAiYWxsb3dBbm9uTG9nZ2luZyI6IGZhbHNlLAogICAgImNvbnRlbnRWZXJzaW9uIjogInByZXZpZXctMS4wLjAiLAogICAgInBhbmVsaXphdGlvblN1bW1hcnkiOiB7CiAgICAgImNvbnRhaW5zRXB1YkJ1YmJsZXMiOiBmYWxzZSwKICAgICAiY29udGFpbnNJbWFnZUJ1YmJsZXMiOiBmYWxzZQogICAgfSwKICAgICJsYW5ndWFnZSI6ICJlbiIsCiAgICAicHJldmlld0xpbmsiOiAiaHR0cDovL2Jvb2tzLmdvb2dsZS5jb20vYm9va3M/aWQ9MXFNcHN3RUFDQUFKJmRxPWluYXV0aG9yOiZobD0mY2Q9MTAmc291cmNlPWdic19hcGkiLAogICAgImluZm9MaW5rIjogImh0dHA6Ly9ib29rcy5nb29nbGUuY29tL2Jvb2tzP2lkPTFxTXBzd0VBQ0FBSiZkcT1pbmF1dGhvcjomaGw9JnNvdXJjZT1nYnNfYXBpIiwKICAgICJjYW5vbmljYWxWb2x1bWVMaW5rIjogImh0dHBzOi8vYm9va3MuZ29vZ2xlLmNvbS9ib29rcy9hYm91dC9UcmlwcGluZ3NfaW5fQXV0aG9yX2xhbmRfYnlfRl9GLmh0bWw/aGw9JmlkPTFxTXBzd0VBQ0FBSiIKICAgfSwKICAgInNhbGVJbmZvIjogewogICAgImNvdW50cnkiOiAiVVMiLAogICAgInNhbGVhYmlsaXR5IjogIk5PVF9GT1JfU0FMRSIsCiAgICAiaXNFYm9vayI6IGZhbHNlCiAgIH0sCiAgICJhY2Nlc3NJbmZvIjogewogICAgImNvdW50cnkiOiAiVVMiLAogICAgInZpZXdhYmlsaXR5IjogIk5PX1BBR0VTIiwKICAgICJlbWJlZGRhYmxlIjogZmFsc2UsCiAgICAicHVibGljRG9tYWluIjogZmFsc2UsCiAgICAidGV4dFRvU3BlZWNoUGVybWlzc2lvbiI6ICJBTExPV0VEIiwKICAgICJlcHViIjogewogICAgICJpc0F2YWlsYWJsZSI6IGZhbHNlCiAgICB9LAogICAgInBkZiI6IHsKICAgICAiaXNBdmFpbGFibGUiOiBmYWxzZQogICAgfSwKICAgICJ3ZWJSZWFkZXJMaW5rIjogImh0dHA6Ly9wbGF5Lmdvb2dsZS5jb20vYm9va3MvcmVhZGVyP2lkPTFxTXBzd0VBQ0FBSiZobD0mcHJpbnRzZWM9ZnJvbnRjb3ZlciZzb3VyY2U9Z2JzX2FwaSIsCiAgICAiYWNjZXNzVmlld1N0YXR1cyI6ICJOT05FIiwKICAgICJxdW90ZVNoYXJpbmdBbGxvd2VkIjogZmFsc2UKICAgfQogIH0KIF0KfQo=
    http_version: 
  recorded_at: Fri, 15 Feb 2019 04:41:53 GMT
recorded_with: VCR 4.0.0
